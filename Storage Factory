    // SPDX-License-Identifier: MIT

pragma solidity ^0.8.16;

import {SimpleStorage} from ".//SimpleStorage.sol";

contract storagefactory{

    //uint256 public favouriteNumber
    // type visibility name
    SimpleStorage[] public listOfSimpleStorageContracts;


 function createSimpleStorageContract() public {
        SimpleStorage newSimpleStorageContract = new SimpleStorage();
        listOfSimpleStorageContracts.push(newSimpleStorageContract);
    }

    function sfStore(uint256 _simpleStoreIndex, uint256 _newSimpleStorageNumber) public {
        // Address
        // ABI - Application Binary Interface 
        SimpleStorage mySimpleStorage = listOfSimpleStorageContracts[_simpleStoreIndex];
        mySimpleStorage.store(_newSimpleStorageNumber);
    }

    function sfGet(uint256 _simpleStoreIndex) public view returns (uint256){
        SimpleStorage mySimpleStorage = listOfSimpleStorageContracts[_simpleStoreIndex];
        return mySimpleStorage.retrieve();
    }
}
